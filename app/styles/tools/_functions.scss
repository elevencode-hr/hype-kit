////
/// Custom functions.
/// @group tools
////

/// Function to get text instead of using `map-get`.

@function text($key, $variant:large) {
  @if map-has-key($text, $key) {
    @if ($variant != null) {
      @return map-get(map-get($text, $key), $variant);
    }

    @return map-get($text, $key);
  }

  @warn "Unknown `#{$key}` in $text.";
  @return null;
}

/// Function to get color values instead of using nested `map-gets`.
///
/// @example scss
///   .element {
///     color: color(<key>);
///   }

@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

/// Function to get z-index values instead of using nested `map-gets`.
///
/// @example scss
///   .element {
///     z-index: zindex(<key>);
///   }

@function zindex($key) {
  @if map-has-key($zindex, $key) {
    @return map-get($zindex, $key);
  }

  @warn "Unknown `#{$key}` in $zindex.";
  @return null;
}

// Convert to em
// ===========================================

// Function to remove the unit from a value to em i.e. strip-unit(30px) would
// return 1.5em assuming $global-font-size was 20px.
@function convert-to-em($value, $base-font-size: $global-font-size) {
  @if unit($value) == "px" {
    @return (strip-unit($value / $base-font-size)) * 1em;
  }

  @if unit($value) == "rem" {
    @return strip-unit($value) * 1em;
  }

  @else {
    @warn "Value must be em or px";
  }

}

// Convert to rem
// ===========================================
/// Convert any px value into its rem equivalent.

@function rem($number) {
  @return $number / $global-font-size * 1rem;
}

/// Halve any input and round the result.

@function halve($number) {
  @return round($number/2);
}
